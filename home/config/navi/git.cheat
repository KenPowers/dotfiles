% Git

# Search all git commit messages for a given string, case-insensitive
git log --all -i --grep '<search-text>'

# Search all git commit contents for a given string
git log --all -S '<search-text>'

# Checkout the main branch
git checkout <main_branch>

# Checkout target branch or tag
git checkout <branch_or_tag>

# Rebase on a given branch
git rebase <branch>

# Rebase interactively on a given branch
git rebase -i <branch>

# Rebase interactively on a given commit
git rebase -i <commit>

# cherry-pick a given branch
git cherry-pick -i <branch>

# cherry-pick a given commit
git cherry-pick -i <commit>

# Open dirty files in $EDITOR
git diff --name-only | xargs -o $EDITOR

# Open files from HEAD commit in $EDITOR
git diff-tree --no-commit-id --name-only -r HEAD | xargs -o $EDITOR

# Commit with co-author
git commit -e -m "commit message" -m "<co_authors>"

# Restore staged files
git restore --staged <staged_files>

# Delete local branches not on origin
git branch -r | awk '{print $1}' | egrep -v -f /dev/fd/0 <(git branch -vv | grep origin) | awk '{print $1}' | xargs git branch -D

# Checkout last branch
git checkout -

# Pull and rebase on main branch
git pull --rebase origin <main_branch>

# Pull and rebase interactively on main branch
git pull --rebase=interactive origin <main_branch>

# Revert Without Committing
git revert --no-commit <ref>

# Checkout contents of file
git checkout -- <git_file>

# Checkout contents of file on another branch
git checkout <branch_or_tag> -- <git_file>

# Show contents of a given commit
git show <commit>

# Optimize Git Repo
git gc --prune=now --aggressive

$ co_authors: git log --pretty="%an <%ae>" | sort | uniq | sed 's|^|Co-authored-by: |g' --- --multi
$ staged_files: git diff --staged --name-only --- --multi
$ branch: git branch | cut -c 3-
$ main_branch: git branch | cut -c 3- | grep -m 1 'main\|master\|dev\|development\|trunk'
$ branch_or_tag: (git branch | cut -c 3-; git tag)
$ commit: git log --oneline --max-count 250 --- --map 'cut -d " " -f 1'
$ git_file: git ls-files
